The milestone is about Disaster and Emergency Aid Management. I Implement all five milestones and I using a lot of knowloage what I learn form the classes.

	The first milestone is to implementing Date and Status module. The Status class can hold information about the state of an object, such as whether an error has occurred and an error message. The Date class handle date information, including year, month, and day. It should also validate the date and provide input/output operators. In Status class, I can easily know how to implement the copy constructor and copy assignment operator beause of the workshop I done before. In date class, the input/output operators are helpful to receive values from users.

	The second milestone is to implement The User interface Menu and AidMan (Aid Management) module. Menu dynamically displays selectable options, derived from a string containing items separated by tabs, and ensures user input is within a valid range through foolproof integer entry. AidMan, the system's controller that have item listing, file handling, and task execution based on user selections from the menu. Overall, the AidMan class is the most important module in the Disaster and Emergency Aid Management system.  

	The third milestone used the concept of class inheritance. iProduct class which is the abstract base class. I created several pure virtual functions and additionally, two help functions which are overloadind operator functions such as ">>" and "<<". The Item class is a concrete implementation of iProduct, with additional attributes like price, quantity, description, and a state flag. Ensures user input is within a valid range through foolproof integer or double entry using the ut.getint and ut.getdouble. Efficient file I/O operations facilitate saving and displaying user inputs also read the data from file. It indicates a good understanding of file I/O in C++. I do not implement the utils.cpp in before milestone after I write those function it is easier to finish the Item class.

	In the fourth milestone, Perishable is a inherit class of Item class. Perishable class is to extend the Item class with additional functionalities specific to perishable items, such as handling expiry dates and storage instructions. The relationship of class is Perishable > Item > iProduct. Perishable items information was received and stored by the user or file. Same as MS3 using the file I/O to read the file and print out the data. The Perishable need to call Item base class function.  I need to be careful not only about inheritance relationships between classes but also about member variables. The Perishable need use Item member variables "sku". Also, Perishable need use Date class to get the expiry dates.

	The last milestone was diffcult to finish. It is focusing on the AidMan class. This class serves as the central controller combining many functions with an array of iProduct pointers. In AidMan::run Each option is designed to handle specific tasks, such as listing items with detailed descriptions, adding or removing items based on sku, updating quantities, sorting items based on need, and creating shipping orders. There are three important methods load, save, and deallocate.  Load reads data from a file into the system, discerning between perishable and non-perishable items. Save writes current data back into the file. Deallocate ensures clean memory management by releasing allocated resources. The save function and the last milestone MS6 spent a lot of time to find out how to implemnt but I felt fulfill when I finished the whole milestone.

	In conclusion, through this milestone, I was able to fully learn to implement a function that receives a value input from the user or a value input from a file. And the inheritance relationship of classes, and the importance of abstract base classes, were also learned.
